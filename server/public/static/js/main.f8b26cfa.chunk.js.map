{"version":3,"sources":["services/AuthService.js","components/Home.js","components/Signup.js","components/Login.js","components/Select.js","components/NavBar.js","components/Choose.js","components/Canvas.js","components/Clock.js","components/CountDown.js","components/GuessCanvas.js","components/GuessInput.js","components/Draw.js","components/ChooseGame.js","components/WordToDraw.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","user","instance","post","then","res","Promise","resolve","data","catch","error","console","login","loggedInUser","get","logout","upload","image","log","this","axios","create","baseURL","process","withCredentials","Home","src","alt","height","className","to","Component","Access","props","state","username","password","handleChange","e","target","name","value","setState","handleSignUp","preventDefault","history","setUser","authService","push","onSubmit","htmlFor","type","required","onChange","Login","handleLogin","class","Canvas","setup","p5","canvas","createCanvas","parent","background","strokeWeight","frameRate","draw","mouseIsPressed","line","mouseX","mouseY","pmouseX","pmouseY","elt","toBlob","blob","erased","file","toDataURL","split","File","clear","erase","serializedCanvas","socket","on","info","Fragment","onClick","id","Clock","React","renderer","minutes","seconds","completed","onFinish","zeroPad","date","Date","now","GuessInput","handleText","text","handleSubmit","Form","Group","controlId","Control","placeholder","Button","Draw","updateUserList","trim","emit","userList","sendMessage","mess","appState","game","newRound","messages","io","list","message","ListGroup","map","elem","idx","Item","key","ChooseGame","setCategory","WordToDraw","wordList","category","words","medium","word","Math","floor","random","length","Words","timeFinish","App","gameType","fetchUser","exact","path","component","render","match","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8b26cfa.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.instance = axios.create({\n      // baseURL:'http://localhost:4000/api/auth',\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true    \n    })\n  }\n\n  signup = (user) => {\n    return this.instance.post('/signup', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  login = (user) => {\n    return this.instance.post('/login', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  loggedInUser = () => {\n    return this.instance.get('/loggedin')\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  logout = (user) => {\n    return this.instance.post('/logout', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  upload = (image) => {\n    console.log(image)\n    return this.instance.post('/upload', image)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n//   updateProfile = (username, course, campus) => {\n//     return this.service\n//       .put(\"/profiles/:id\", { username, course, campus })\n//       .then(response => response.data);\n//   };\n\n}\n\n\n\nexport default AuthService;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../services/AuthService\";\nimport styled from \"styled-components\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <img\n          src='./logo.svg'\n          alt='logo'\n          height='360'\n          // width=\"100\"\n        />\n        <h3> i will explain how the game works</h3>\n        <button className='btn cta bg'>\n          <Link to='/signup'>Sign Up</Link>\n        </button>\n        <button className='btn cta bg'>\n          <Link to='/login'>Log In</Link>\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n// import PageTitle from '../../fontStyles/PageTitle'\nimport AuthService from '../services/AuthService'\n// import { Card, CardTitle, Form } from '../../styles/card';\n\nexport default class Access extends Component {\n  constructor(props) {\n    super(props)\n    this.authService = new AuthService();\n  }\n\n  state = {\n    username: '',\n    password: ''\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({...this.state, [name]:value})\n  }\n  handleSignUp = (e) => {\n    e.preventDefault()\n    const { history, setUser } = this.props;\n    this.authService.signup(this.state)\n    .then(\n      (user) => {\n        setUser(user);\n        history.push(\"/choose-game\")\n      },\n      (error) => {\n        console.error(error)\n      }\n    )\n  }\n\n//   handleUpload = (e) => {\n//     const uploadData = new FormData();\n//     uploadData.append('image', e.target.files[0])\n//     this.authService.upload(uploadData)\n//     .then(\n//       (data) => {\n//         this.setState({...this.state, image: data.secure_url})\n//       },\n//       (error) => {\n//         console.error(error)\n//       }\n//     )\n//   }\n\n  render() {\n    const { username, password} = this.state;\n    return (\n      <div>\n      <h1>Sign Up</h1>\n        <form onSubmit={this.handleSignUp}>\n          <label htmlFor=\"username\">username </label>\n          <input type=\"text\" name=\"username\" value={username} required onChange={this.handleChange}/>\n          <label htmlFor=\"password\">password </label>\n          <input type=\"password\" value={password} name=\"password\" required onChange={this.handleChange}/>\n          <button className=\"btn cta bg\" type=\"submit\" value=\"Create account\">Create account</button>\n        </form>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport AuthService from '../services/AuthService'\nimport { Link } from \"react-router-dom\";\n\n\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    // console.log(props)\n    this.authService = new AuthService();\n  }\n\n  state = {\n    username: '',\n    password: ''\n  }\n\n//   sendChangeToApp= (e) => {\n//     const { key, value } = e.target;\n//     return this.props.changeApp(key,value)\n// }\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({...this.state, [name]:value})\n    \n  }\n\n  handleLogin = (e) => {\n  \n    const { setUser, history } = this.props;\n    e.preventDefault()\n    this.authService.login(this.state)\n    .then(\n      (user) => {\n        setUser(user)\n        history.push(\"/choose-game\")\n      },\n      (error) => {\n        console.error(error)\n      }\n    )\n  }\n\n  render() {\n   console.log(this.state)\n    const { username, password } = this.state;\n    return (\n        <div className='flex'>\n        <h2>Login</h2>\n          <form onSubmit={this.handleLogin} className='flex'>\n            <label htmlFor=\"username\">username </label>\n            <input class='margin-bottom' type=\"text\" name=\"username\" value={username} required onChange={this.handleChange}/>\n            <label htmlFor=\"password\">password </label>\n            <input class='margin-bottom' type=\"password\" value={password} name=\"password\" required onChange={this.handleChange}/>\n            <button className=\"btn cta bg\" type=\"submit\" value=\"Login\">Login</button>\n          </form>\n        </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from '../services/AuthService'\n\nexport default class Select extends Component {\n    constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n  handleChange = (e) => {\n  \n    const { name, value } = e.target;\n    // this.setState({[name]:value})\n    this.props.setCategory({[name]:value})\n    \n  }\n  render() {\n    return (\n      <div>\n      <h3>Game type</h3>\n      <button type='button' value=\"group\" name=\"gameType\" \n      onClick={this.handleChange}>\n      Group\n      </button>\n       <button type='button' value=\"solo\" name=\"gameType\" \n      onClick={this.handleChange}\n      >Solo</button>\n        <Link to='/draw'>Go</Link>\n      </div>\n    \n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\";\nimport AuthService from '../services/AuthService'\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService();\n\n    }\n\n    logoutUser = () => {\n        this.authService.logout()\n            .then(x => this.props.setUser(false))\n            .then(x=> this.props.setCategory({category: '', gameType:''}))\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n        // const saludo = this.props.loggedInUser ? this.props.loggedInUser.username : 'invitado'\n\n        return (\n\n            // this.props.loggedInUser ?\n\n                        <Nav>\n                            <Nav.Link as=\"li\"><Link to=\"/\">Home</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/profile\">Profile</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/\"  onClick={this.logoutUser}>Logout</Link></Nav.Link>\n                        </Nav>\n                        \n             \n        )\n    }\n}\n\nexport default Navigation","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport AuthService from '../services/AuthService'\nimport Navigation from './NavBar';\n\n\nexport default class Choose extends Component {\n    constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n    \n  }\n\n\n  handleChange = (e) => {\n  \n    const { name, value } = e.target;\n    // this.setState({[name]:value})\n    this.props.setCategory({[name]:value})\n\n  }\n\n\n    render() {\n        return (\n            <div>\n            <div>\n            <h3>Level</h3>\n            <button type='button' value=\"easy\" name=\"category\" \n            onClick={this.handleChange}>Easy</button>\n             <button type='button' value=\"medium\" name=\"category\" \n            onClick={this.handleChange}\n            >Medium</button>\n             <button type='button' value=\"hard\" name=\"category\" \n            onClick={this.handleChange}\n            >Hard</button>\n            </div>\n            <div>\n            <h3>Theme</h3>\n            <button type='button' value=\"objects\" name=\"category\" \n            onClick={this.handleChange}\n            >Objects</button>\n             <button type='button' value=\"persons\" name=\"category\" \n            onClick={this.handleChange}\n            >Persons</button>\n             <button type='button' value=\"actions\" name=\"category\" \n            onClick={this.handleChange}\n            >Actions</button>\n            </div>\n            <Link to='/select'>Go</Link>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Sketch from \"react-p5\";\n// import {toBlob} from \"canvas-to-blob\"\nimport io from \"socket.io-client\";\nimport AuthService from \"../services/AuthService\";\n\nexport default class Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n    this.state = {\n      erased: false,\n      serializedCanvas: null\n    };\n    this.socket = this.props.socket;\n    console.log(this.props.socket);\n    this.socket.on(\"drawing\", info => {});\n  }\n\n  setup = p5 => {\n    this.canvas = p5.createCanvas(20, 20).parent(\"canvas\");\n    p5.background(255);\n    p5.strokeWeight(6);\n    // p5.stroke(234);\n    p5.frameRate(60);\n  };\n\n  //   blobToFile = (blob, fileName)=>{\n  //     //A Blob() is almost a File() - it's just missing the two properties below which we will add\n  //     blob.lastModifiedDate = new Date();\n  //     blob.name = fileName;\n  //     return blob;\n  // }\n\n  draw = p5 => {\n    let line = [];\n    if (p5.mouseIsPressed === true) {\n      line.push(p5.line(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY));\n      //  console.log(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY)\n      // console.log(this.canvas.width, this.canvas.height)\n\n      // this.canvas.elt.toBlob(function(blob) {\n      //   var myFile = this.blobToFile(blob, \"my-image.png\");\n      //   console.log(myFile)\n      // })\n      //   let w = this.canvas.width;\n      // let h = this.canvas.height;\n      // this.socket.emit('drawing', {\n      //   x0: p5.pmouseX / w,\n      //   y0: p5.pmouseY / h,\n      //   x1: p5.mouseX / w,\n      //   y1: p5.mouseY / h,\n      // });\n    }\n    this.canvas.elt.toBlob(function(blob) {\n      // console.log(blob)\n    });\n\n    //  console.log(line);\n    //  console.log(line.length)\n\n    if (this.state.erased) {\n      let file = this.canvas.elt.toDataURL(\"image/png\").split(\",\")[1];\n      let image = new File([file], \"image.png\", { type: \"image/png\" });\n      \n      console.log(image);\n      this.authService.upload(image);\n\n      p5.clear();\n      p5.setup();\n      this.setState({ erased: false });\n    }\n  };\n\n  erase = e => {\n    this.setState({\n      erased: true\n    });\n  };\n\n  render() {\n    // console.log(this.state.erased);\n    return (\n      <React.Fragment>\n        <div>\n          <h1>Draw!</h1>\n          <button onClick={e => this.erase(e)}>X</button>\n          <div id='canvas'>\n            <Sketch setup={this.setup} draw={this.draw} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","\nimport React, { Component } from \"react\";\nimport Countdown, { zeroPad } from \"react-countdown-now\";\n\n\nexport default class Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\ncompleted: false,\n    }\n  }\n  \n  renderer = ({ minutes, seconds, completed }) => {\n    if (completed) {\n      this.props.onFinish()\n      return <span>Time is up!</span>;\n    } else {\n      // Render a countdown\n      return (\n        <span>\n          {zeroPad(minutes)}:{zeroPad(seconds)}\n        </span>\n      );\n    }\n  };\n\n  render() {\n    return <Countdown date={Date.now() + 20000} renderer={this.renderer} />;\n  }\n}\n","import React from \"react\";\nimport { zeroPad } from \"react-countdown-now\";\n\nexport default class CountDown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        time: {}, \n        seconds: 5,\n        timeFinish: false\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n\n    console.log(this.props);\n  }\n\n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds\n    };\n\n    return obj;\n  }\n\n  // handleChange = (e) => {\n\n  //     const { name, value } = e.target;\n  //     // this.setState({[name]:value})\n  //     this.props.finishTime({[name]:value})\n\n  //   }\n\n  componentDidMount() {\n    let timeLeft = this.secondsToTime(this.state.seconds);\n    this.setState({ time: timeLeft });\n  }\n\n\n  startTimer() {\n    console.log('a');\n    if (this.timer === 0 && this.state.seconds > 0) {\n      this.timer = setInterval(this.countDown, 1000);\n      console.log('b')\n    }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let gameTime = this.state.seconds;\n    let seconds = gameTime - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds\n    });\n\n    // Check if we're at zero.\n    if (this.state.seconds === 0) {\n      clearInterval(this.timer);\n      console.log(this.state);\n     ;\n      this.timer=0;\n      // this.setState({...this.state,  seconds: 5});\n      this.setState({ seconds: 5, timeFinish: true });\n      this.props.finishTime({ timeFinish: this.state.timeFinish })\n      console.log(this.state, this.timer);\n      \n    }\n  }\n\n//   componentDidUpdate(){\n//     if(this.state.timeFinish === true){\n//       console.log('e')\n//   this.setState({timeFinish: false})\n//     }\n// }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.startTimer}>Start</button>\n        <span>\n          {zeroPad(this.state.time.m)}:{zeroPad(this.state.time.s)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Sketch from \"react-p5\";\n// import {toBlob} from \"canvas-to-blob\"\n\nexport default class GuessCanvas extends Component {\n  constructor() {\n    super();\n    this.state = {\n      erased: false,\n      serializedCanvas: null\n    };\n  }\n\n  setup = p5 => {\n    this.canvas = p5.createCanvas(800, 450).parent('canvas');\n    p5.background(230);\n    p5.strokeWeight(6);\n    // p5.stroke(234);\n    p5.frameRate(60);\n  };\n\n  draw = p5 => {\n//       let line=[];\n//     if (p5.mouseIsPressed === true) {\n//      line.push(p5.line(p5.mouseX, p5.mouseY, p5.pmouseX, p5.pmouseY));\n//     //  console.log(this.canvas)\n\n//     this.canvas.elt.toBlob(function(blob) {\n     \n//       // console.log(blob)\n//     })\n\n//     //  console.log(line);\n//     //  console.log(line.length)\n//     }\n\n//     if (this.state.erased) {\n// //         let to_save = p5.get(0, 0, 800, 450); \n// // to_save.save(\"saved_name.png\");\n//       p5.clear();\n//       p5.setup();\n//       this.setState({ erased: false });\n\n//     }\n  };\n\n//   erase = e => {\n//     this.setState({\n//       erased: true\n//     });\n//   };\n\n  render() {\n    // console.log(this.state.erased);\n    return (\n        <React.Fragment>\n        <div>\n          <h1>Guess!</h1>\n          <div id='canvas'>\n          <Sketch setup={this.setup} draw={this.draw}/>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Button, Form } from 'react-bootstrap'\n\n\nexport default class GuessInput extends Component {\n    constructor(){\n        super()\n        this.state={\n            text:\"\"\n        }\n    }\n\n    handleText=(e)=>{\n        this.setState({...this.state, text: e.target.value})\n    }\n\n    handleSubmit=(e)=>{\n        e.preventDefault()\n        this.props.info(this.state.text)\n        this.setState({...this.state, text: \"\"})\n    }\n\n    // Este componente renderiza el input para escribir mensajes dentro del chat\n    render() {\n        return (\n            <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control\n                onChange={e => {\n                  this.handleText(e);\n                }}\n                type=\"text\"\n                placeholder=\"Your message\"\n                value={this.state.text}\n              />\n            </Form.Group>\n    \n            <Button\n              type=\"submit\"\n              onClick={(e) => {\n                this.handleSubmit(e);\n              }}\n            >\n              Send\n            </Button>\n          </Form>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Canvas from \"./Canvas\";\nimport CountDown from \"./CountDown\";\nimport Clock from \"./Clock\";\nimport io from 'socket.io-client'\nimport GuessCanvas from \"./GuessCanvas\";\nimport { Row, ListGroup, Col, Container} from 'react-bootstrap'\nimport GuessInput from \"./GuessInput\";\n\nexport default class Draw extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game: { ...this.props.appState },\n      newRound: false,\n      // word: \"\",\n      messages: [],\n      userList : [],\n      user: this.props.appState.user.username\n    };\n    console.log(this.props.appState.user.username);\n\n    this.socket = io('http://localhost:4000')\n\n    // Creamos un \".on\", el cual escucha si el server envia una lista de usuarios \n    this.socket.on('list', list => {\n      console.log(this.socket)\n      this.setState({...this.state, userList: list})\n    })\n\n    this.socket.on(\"newMessage\", message => {\n      let mess = this.state.messages;\n      mess.push(message);\n      this.setState({ ...this.state, messages: mess });\n    });\n  }\n\n  updateUserList=(name)=>{\n    if(name.trim() !== ''){\n      this.setState({...this.state, user: name},()=>{\n        this.socket.emit('newUser', name)\n        // this.props.history.push('/chat')\n        console.log('list', this.state.userList)\n      })\n    }\n  }\n\n  sendMessage = text => {\n    if(text.trim()===\"\")return\n    let mess = {\n      text: text,\n      user: this.props.appState.user.username\n    };\n    // Este \".emit\" le envia al server los mensajes que escribamos\n    // El server se encargará de propagarlos\n    this.socket.emit(\"messageSent\", mess);\n  };\n\n  onFinish() {\n    this.setState({\n      ...this.state,\n      newRound: true\n    });\n  }\n\n  // componentDidMount=()=>{\n  //   this.updateUserList()\n  //   console.log('a')\n  // }\n  // componentDidUpdate=()=>{\n  //   document.getElementById('chatBox').scrollTop = document.getElementById('chatBox').scrollHeight\n  // }\n\n  render() {\n    if (this.state.newRound) {\n      return <Redirect to='/word-to-draw' />;\n    }\n    return (\n      <React.Fragment>\n        <Clock onFinish={() => this.onFinish()}></Clock>\n        <div>\n        {/* <CountDown finishTime={data =>this.handleChange(data)}></CountDown> */}\n        <Canvas props={this.props} socket={this.socket}></Canvas>\n        </div>\n              <div className='bottom'>\n              <div>\n            <h5>ACTIVE USERS:</h5>\n            <ListGroup>\n              {this.state.userList.map((elem, idx) => {\n                return elem===this.props.appState.user.username ?\n                  <ListGroup.Item key={idx}><b>{elem}</b></ListGroup.Item>\n                  :\n                  <ListGroup.Item key={idx}>{elem}</ListGroup.Item>\n              })}\n            </ListGroup>\n            </div>\n            <div>\n            <div className=\"chatBox\" id=\"chatBox\">\n              {this.state.messages.map((elem, idx) => {\n                return (\n                  <h6 key={idx}>\n                    {elem.user} : {elem.text}\n                  </h6>\n                );\n              })}\n            </div>\n\n            {/* Input para nuevos mensajes */}\n            <div className=\"textForm\">\n            \n              <GuessInput info={this.sendMessage}></GuessInput>\n            </div>\n            </div>\n            </div>\n          {/* </Col> */}\n\n        {/* <GuessCanvas></GuessCanvas> */}\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../services/AuthService\";\nimport Navigation from \"./NavBar\";\n\nexport default class ChooseGame extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    // this.setState({[name]:value})\n    this.props.setCategory({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h2>Who are you</h2>\n          <h2>playing with?</h2>\n          <Link className=\"btn cta bg\" to='/word-to-draw'>Solo</Link>\n          <Link className=\"btn cta bg\" to='/word-to-draw'>Group</Link>\n\n          {/* <button className=\"btn cta bg\" type='button' value='group' name='gameType' onClick={this.handleChange}>\n            Group\n          </button>\n          <button className=\"btn cta bg\" type='button' value='solo' name='gameType' onClick={this.handleChange}>\n            Solo\n          </button> */}\n        </div>\n        \n      </div>\n    );\n  }\n}\n","\nimport React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport Words from \"../words.json\";\n\nexport default class WordToDraw extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          game: { ...this.props.appState },\n          words: [...Words],\n          timeFinish: false,\n          word:''\n        };\n        console.log(this.props.appState)\n      }\n\n\n    wordList = () => {\n        let category = [...this.state.words[0].medium]; //array containing 100 words of selected category\n        let word = category[Math.floor(Math.random()*category.length)];\n    //     // const shuffled = category.sort(() => 0.5 - Math.random());//shuffles the array's elemnts\n    //     // let selected = shuffled.slice(0, 10);// Get sub-array of first 10 elements after shuffled\n        this.setState({'word': word});\n      };\n\n      componentDidMount(){\n        this.wordList()\n    }\n\n\n    render() {\n        return (\n            <div className='cel center' >\n            <div className='flex center'>\n            <h3>You have 20 seconds to draw </h3>\n                <h4 className='words'>{this.state.word}</h4>\n                <Link className=\"btn cta bg yel\" to='/draw' game={this.state}>Go</Link>\n            </div>\n            </div>\n        )\n    }\n}\n\n\n\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport AuthService from \"./services/AuthService\";\n\nimport \"./App.css\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nimport Home from \"./components/Home\";\n\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\n\nimport Select from \"./components/Select\";\nimport Choose from \"./components/Choose\";\nimport Navigation from \"./components/NavBar\";\nimport Draw from \"./components/Draw\";\nimport ChooseGame from \"./components/ChooseGame\";\nimport WordToDraw from \"./components/WordToDraw\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  state = {\n    user: null,\n    category: \"\", //from what list the user will be drawing\n    gameType: \"\" //playing solo or in group\n  };\n\n  //user methods//\n  setUser = user => {\n    console.log(this.state);\n    this.setState({ ...this.state, user });\n  };\n\n  fetchUser = () => {\n    if (this.state.user === null) {\n      this.authService\n        .loggedInUser()\n        .then(\n          user => {\n            this.setUser(user);\n          },\n          error => {\n            this.setUser(false);\n          }\n        )\n        .catch(() => {\n          this.setUser(false);\n        });\n    }\n  };\n\n  // wordList = () => {\n  //   let category = [...this.state.words[0][this.props.appState.category]]; //array containing 100 words of selected category\n  //   let word = category[Math.floor(Math.random() * category.length)];\n  //   //     // const shuffled = category.sort(() => 0.5 - Math.random());//shuffles the array's elemnts\n  //   //     // let selected = shuffled.slice(0, 10);// Get sub-array of first 10 elements after shuffled\n  //   this.setState({ word: word });\n  // };\n\n  handleChange = e => {\n    console.log(e);\n    // const {name, value} = e;\n    this.setState(e);\n  };\n\n  // componentDidMount() {\n  //   this.wordList();\n  // }\n\n  render() {\n    this.fetchUser();\n    const { user } = this.state;\n\n    return (\n      <div className='App'>\n        {/* <header className=\"App-header\"> */}\n        {/* <Navigation loggedInUser={this.state} setUser={this.setUser} setCategory={e=>this.handleChange(e)}/> */}\n        {user && (\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/login' render={match => <Login {...match} setUser={this.setUser} />} />\n            <Route exact path='/signup' render={match => <Signup {...match} setUser={this.setUser} />} />\n            <Route exact path='/choose-game' render={match => <ChooseGame {...match} setCategory={e => this.handleChange(e)} />} />\n            <Route exact path='/word-to-draw' render={match => <WordToDraw {...match} setCategory={e => this.handleChange(e)} appState={this.state} />} />\n            {/* <Route exact path='/select' render={match => <Select {...match} setCategory={e=>this.handleChange(e)}  />} />\n            <Route exact path='/choose-game' render={match => <Choose {...match} setCategory={e=>this.handleChange(e)}  />} /> */}\n            <Route exact path='/draw' render={match => <Draw {...match} setUser={this.setUser} appState={this.state}/>} />\n          </Switch>\n        )}\n        {!user && (\n          <Switch>\n            <Route exact path='/' render={match => <Home {...match} setUser={this.setUser} />} />\n            <Route exact path='/login' render={match => <Login {...match} setUser={this.setUser} />} />\n            <Route exact path='/signup' render={match => <Signup {...match} setUser={this.setUser} />} />\n          </Switch>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}